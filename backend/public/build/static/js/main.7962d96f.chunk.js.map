{"version":3,"sources":["services/auth.js","hooks/context.js","services/paths.js","components/LayoutApp.js","components/home/hero.js","components/home/about.js","components/home/feature.js","components/home/works.js","components/home/faq.js","components/home/pricing.js","components/home/contact.js","components/Home.js","components/404/NotFound.js","pages/Login.js","components/authLayout.js","services/topics.js","components/LayoutDash.js","pages/CreatePath.js","pages/Dash.js","pages/Signup.js","components/UpdateProfileForm.js","pages/Profile.js","components/EditPath.js","components/PathInfo.js","pages/DetailsPath.js","components/TextContent.js","components/LinkContent.js","components/ImgContent.js","pages/ContentTopic.js","pages/Multimedia.js","services/products.js","pages/Donate100.js","pages/Donate200.js","pages/Donate300.js","pages/Donate400.js","pages/Progreso.js","pages/ChooseDonation.js","components/PrivateRoute.js","components/PrivDash.js","pages/ExplorePaths.js","pages/DetailsExplorePath.js","pages/DetailsTopic.js","Router.js","serviceWorker.js","index.js"],"names":["authService","axios","create","baseURL","withCredentials","signupFn","userInfo","post","loginFn","currentUserFn","get","logoutFn","updateFn","id","user","profile","AppCtx","createContext","CtxProvider","props","useState","setUser","useEffect","a","currentUser","data","console","log","getSessionData","login","logout","_","value","useMemo","Provider","useContextInfo","useContext","pathService","Layout","Header","Content","Footer","getAllPaths","getSinglePath","createPath","path","updatePath","put","deletePath","delete","Title","Typography","items","Text","Link","Paragraph","key","title","content","AppHero","className","map","item","style","fontSize","color","size","icon","class","AppAbout","gutter","span","Meta","Card","AppFeature","hoverable","cover","alt","height","src","AppWorks","isModalVisible","setIsModalVisible","onClick","visible","onCancel","footer","width","frameborder","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","Panel","Collapse","Appfaq","defaultActiveKey","header","type","price","mentoring","support","jobs","email","AppPricing","grid","column","dataSource","renderItem","Item","TextArea","Input","AppContact","name","initialValues","remember","rules","required","message","placeholder","valuePropName","validator","Promise","resolve","reject","htmlType","Home","pathsy","setPaths","getPaths","border","margin","topics","NotFound","Login","history","Form","useForm","form","userInput","push","_id","error","background","paddingTop","padding","borderRadius","level","layout","onFinish","label","Password","block","href","getSingleTopic","createTopic","updateTopic","topic","deleteTopic","Menu","SubMenu","Sider","LayoutDash","children","paddingLeft","display","justifyContent","theme","mode","to","Fragment","overflow","position","left","top","defaultSelectedKeys","shadowBox","UserOutlined","VideoCameraOutlined","UploadOutlined","BarChartOutlined","marginLeft","minHeight","textAlign","CreatePath","submitForm","description","category","userId","objective","duration","pathId","resetFields","autoComplete","Option","List","fields","add","remove","field","marginBottom","align","fieldKey","MinusCircleOutlined","PlusOutlined","Dash","Search","setOtherPaths","changes","userPaths","filter","info","users","flexDirection","index","active","cloudinaryAPI","Signup","img","setImg","loading","setLoading","usr","image","newUsr","file","FormData","append","secure_url","uploadButton","LoadingOutlined","marginTop","hasFeedback","showUploadList","beforeUpload","listType","UpdateProfileForm","username","disable","setDisable","values","updatedUsr","newUpdatedUsr","disabled","Profile","showEditForm","setShowEditForm","xs","sm","md","marginRight","EditPath","useHistory","single","setForms","PathInfo","myPath","setMyPath","userPath","i","length","DetailsPath","match","params","showInfo","setShowInfo","setChanges","createNewTopic","newTopic","number","danger","okText","cancelText","hidden","TextContent","contenty","rows","bordered","backgroundColor","LinkContent","ImgContent","ContentTopic","setContents","setContent","allInfo","setAllInfo","video","contentForm","setContentForm","imgForm","setImgForm","linkForm","setLinkForm","arr","slice","url","getInfoTopic","contentArray","allInfoArray","text","link","topicContent","Multimedia","productsService","getProduct100","getProduct200","getProduct300","getProduct400","Donate100","product","setProduct","paymentContainereRef","useRef","unit_price","currency_id","script","document","createElement","setAttribute","prefId","current","appendChild","fetchProduct","ref","Donate200","Donate300","Donate400","Step","Steps","Progreso","direction","PreDonate","PrivateRoute","Component","component","rest","render","PrivDash","ExplorePaths","otherPaths","selectedTopics","setSelectedTopics","search","target","allTitles","allPaths","toLowerCase","onChange","allowClear","copy","Group","allPathsy","paths","DetailsExplorePath","DetailsTopic","Success","Failure","Pending","Router","exact","ChooseDonation","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7962d96f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = '/auth'\n\nconst authService = axios.create({\n  baseURL,\n  withCredentials: true\n})\n\n// 1. Signup \nexport const signupFn = userInfo =>\n  authService.post('/signup', userInfo)\n\nexport const loginFn = userInfo =>\n  authService.post('/login', userInfo)\n\nexport const currentUserFn = () =>\n  authService.get('/current-user')\n\nexport const logoutFn = () =>\n  authService.get('/logout')\n\nexport const updateFn = (id, user) =>\nauthService.post(`/edit/${id}`, user)\n\nexport const profile = () => authService.get(\"/profile\")\n\n","/*import {\n    useState,\n    createContext,\n    useContext,\n    useEffect\n} from 'react'\nimport React from 'react'\n  \n    import { currentUserFn } from '../services/auth'\n    \n    export const AppContext = createContext()\n    \n    export const AppCtxProvider = props => {\n        const [user, setUser] = useState(null)\n    \n        useEffect(() => {\n        async function getSessionData() {\n            const { data } = await currentUserFn()\n            login(data);\n        }\n    \n        getSessionData()\n        }, [])\n    \n        const login = userInfo => {\n        setUser(userInfo)\n        }\n    \n        const logout = () => {\n        //TODO: Cerrar la sesion en el server y en el cliente\n        setUser(null)\n        }\n    \n        const value = { user, login, logout }\n    \n        return (\n        <AppContext.Provider {...props} value={value} />\n        )\n    }\n    \n    // Opcional: agregamos un custom hook para evitar consumir en cada componente nuestro ctx\n    \n    export const useContextInfo = () => useContext(AppContext)\n    */\n\n   import { useState, createContext, useContext, useEffect, useMemo } from \"react\"\n   import React from 'react'\n   import { currentUserFn } from '../services/auth'\n\n   const AppCtx = createContext()\n   \n   export const CtxProvider = props => {\n     //Para ver el comportamiento de la ruta privada, cambia a true el valor de inicio del state\n     const [user, setUser] = useState(null)\n\n     useEffect(() => {\n      async function getSessionData() {\n        const { data: currentUser } = await currentUserFn();\n        console.log(currentUser)\n        if (currentUser) setUser(currentUser);\n      }\n  \n      getSessionData()\n      }, [])\n\n   \n      const login = (userInfo) => setUser(userInfo);\n      const logout = _ => setUser(null)\n     const value = useMemo(() => ({ user, login, logout }), [user]);\n\n     return <AppCtx.Provider {...props} value={value} />\n   }\n   \n   export const useContextInfo = () => useContext(AppCtx);\n   \n","import axios from 'axios'\n\n\nconst baseURL = '/api/path'\n\nconst pathService = axios.create({ baseURL })\n\nexport const getAllPaths = () => pathService.get('')\n\nexport const getSinglePath = id => pathService.get(`/${id}`)\n    \nexport const createPath =  path => pathService.post(`/create`, path)\n    \nexport const updatePath = (id, path) => pathService.put(`/${id}`, path)\n    \n export const deletePath = id => pathService.delete(`/${id}`) ","import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context'\nimport { logoutFn } from '../services/auth'\nconst { Header, Content, Footer } = Layout;\n\n\nconst LayoutApp = ({ children }) => {\n  const { user, logout } = useContextInfo()\n\n  async function handleLogout() {\n    await logoutFn()\n    logout()\n  }\n\n  return (\n    <Layout className=\"layout\">\n    <div >\n      <Header className=\"header\" style={{paddingLeft:'200px'}}>\n        <div className=\"logo\" style={{display:'flex', justifyContent:'right'}}/>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"7\">\n              <Link to=\"/explore\">\n              Explore\n              </Link>\n          </Menu.Item>\n          {!user ? <>\n            <Menu.Item key=\"2\">\n              <Link to=\"/signup\">\n                Signup\n            </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to=\"/login\">\n                Login\n            </Link>\n            </Menu.Item>\n          </> : <React.Fragment>\n              <Menu.Item key=\"4\">\n                <Link to=\"/profile\">\n                  Profile\n              </Link>\n              </Menu.Item>\n              <Menu.Item key=\"5\" onClick={handleLogout}>\n              <Link to=\"/\">\n              Logout\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              <Link to=\"/choose-donation\">\n              Donate\n              </Link>\n            </Menu.Item>\n            \n            </React.Fragment>}\n\n        </Menu>\n      </Header>\n      <br />\n      <Content >\n        <div className=\"site-layout-content\">{children}</div>\n      </Content>\n      </div>\n    </Layout>\n  )\n}\n\nexport default LayoutApp\n","import React from 'react';\nimport { Carousel, Button, Typography } from 'antd';\n\nconst {Title, Text, Link, Paragraph} = Typography;\n\nconst items = [\n    {\n        key: '1',\n        title: 'Aprende',\n        content: 'Estudia las diferentes rutas creadas por la comunidad',\n    },\n    {\n        key: '1',\n        title: 'Comparte',\n        content: 'Crea tus propias rutas para ti y compartelas con la comunidad',\n    },\n    {\n        key: '1',\n        title: 'Trabaja',\n        content: 'Date a conocer y encuentra el trabajo que tanto amas',\n    },\n]\n\nconst AppHero = () => {\n    return (\n\n        <div className=\"heroBlock\">\n        <Carousel>\n        {items.map(item => {\n            return (\n             <div key={item.key} className=\"container-fluid\">\n             <div className=\"content\">\n              <Title style={{ fontSize: '50px', color: '#ffffff' }}>{item.title}</Title>\n              <p style={{ fontSize: '30px', color: '#ffffff' }}>{item.content}</p>\n              <div className=\"btnHolder\">\n              <Button size=\"large\">Learn more</Button>\n              <Button size=\"middle\">Watch a demo</Button>\n              </div>\n             </div>\n             </div>\n            );\n        })}        \n       </Carousel>\n      </div>\n    );\n}\n\nexport default AppHero;","import React from 'react'\nimport { Row, Col} from 'antd';\n\nconst items = [\n    {\n        key: '1',\n        icon: <i class=\"far fa-file-code\"></i>,\n        title: 'Somos Coders',\n        content: 'todos los dias codiamos para poder mejorar nuestro servicio y producto mas y mas.',\n    },\n    {\n        key: '2',\n        icon: <i class=\"fas fa-code-branch\"></i>,\n        title: 'Somos Estudiantes',\n        content: 'nos preparamos con nuevos temas y maneras de hacer las cosas cada dia',\n    },\n    {\n        key: '3',\n        icon: <i class=\"fas fa-user-secret\"></i>,\n        title: 'Somos Mentores',\n        content: 'al igual que tu fuimos estudiantes y sabemos como puedes aprender mas rapido',\n    },\n]\n\nconst AppAbout = () => {\n    return (\n       <div className=\"block aboutBlock\">\n           <div className=\"container-fluid\">\n            <div className=\"titleHolder\">\n             <h2>Quienes somos?</h2>   \n             <h3>Somos igual que tu!</h3>\n            </div>\n            <div className=\"contentHolder\">\n                <p>Nos apasiona aprender codigo, trabajar en este planeta de desarrollo de tecnologias informaticas y lo mas importante! somos muy buenos guiandote para que aprendas lo mas rapido posible y seas autodidacta</p>\n            </div>\n            <Row gutter={[16, 16]}>\n            {items.map(item =>{\n                return (\n                <Col span={8}>\n                    <div className=\"content\">\n                        <div className=\"icon\">\n                        {item.icon}\n                        </div>                    \n                        <h3>{item.title}</h3>\n                        <p>{item.content}</p>\n                    </div>\n                </Col>\n                );\n            })}\n            </Row>            \n           </div>\n       </div>\n    );\n}\n\nexport default AppAbout;\n","import React from 'react'\nimport { Row, Col } from 'antd';\nimport { Card } from 'antd';\nconst { Meta } = Card;\n\nconst AppFeature = () => {\n    return (\n        <div className=\"block featureBlock bgGray\">\n            <div className=\"container-fluid\">\n            <div className=\"titleHolder\">\n               <h2>Rutas de Aprendizaje</h2> \n               <p>Escoje , Haz Click y Sube tu nivel en pocas semanas.</p>\n            </div>\n            <Row gutter={[16, 16]}>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\"  style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1573164713988-8665fc963095?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\" />}\n            >\n                <Meta title=\"BackEnd\" />\n            </Card>\n            </Col>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\" style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1559028012-481c04fa702d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1535&q=80\" />}\n            >\n                <Meta title=\"FrontEnd\" />\n            </Card>\n            </Col>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\" style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1586772002345-339f8042a777?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=3000&q=80\" />}\n            >\n                <Meta title=\"DevOps\" />\n            </Card>\n            </Col>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\" style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1496368077930-c1e31b4e5b44?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\" />}\n            >\n                <Meta title=\"CyberSecurity\" />\n            </Card>\n            </Col>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\" style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1562577309-4932fdd64cd1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1567&q=80\" />}\n            >\n                <Meta title=\"Digital Marketing\" />\n            </Card>\n            </Col>\n            <Col span={8}>\n            <Card\n                hoverable\n       \n                cover={<img alt=\"example\" style={{ height: '300px'}} src=\"https://images.unsplash.com/photo-1564069114553-7215e1ff1890?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2089&q=80\" />}\n            >\n                <Meta title=\"SoftSkills\" />\n            </Card>\n            </Col>\n            </Row>\n           \n            </div>\n        </div>\n    );\n}\n\nexport default AppFeature;\n","import React, { useState } from 'react';\nimport { Button, Modal, Typography } from 'antd';\n\nconst {Title, Text, Link, Paragraph} = Typography;\n\nconst AppWorks = () => {\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n      setIsModalVisible(true);\n    };  \n  \n    const handleCancel = () => {\n      setIsModalVisible(false);\n    };\n\n    return (\n        <div className=\"block worksBlock\">\n            <div className=\"container-fluid\">\n                <div className=\"titleHolder\">\n                    <Title style={{ color: '#ffffff'}}>Linux</Title>\n                    <h2>Asi como lo vez y escuchas mucho Linux, linux y mas linux y terminal de comandos aprenderas con nosotros</h2>\n                </div>\n                <div className=\"contentHolder\">\n                    <Button onClick={showModal}>\n                        <i class=\"fas fa-play\"></i>\n                    </Button>\n                </div>\n                <Modal\n                    title=\"Linux tutorial\"\n                    visible={isModalVisible}                    \n                    onCancel={handleCancel}\n                    footer={null}\n                >\n                    <iframe width=\"100%\" height=\"350\"\n                    src=\"https://www.youtube.com/embed/BMGixkvJ-6w\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen=\"allowfullscreen\"\n                    mozallowfullscreen=\"mozallowfullscreen\" \n                    msallowfullscreen=\"msallowfullscreen\" \n                    oallowfullscreen=\"oallowfullscreen\" \n                    webkitallowfullscreen=\"webkitallowfullscreen\"\n                    ></iframe>\n\n                </Modal>\n            </div>\n        </div>\n    );\n  }\n\nexport default AppWorks;\n\n","import React from 'react'\nimport { Collapse, Button } from 'antd';\n\nconst { Panel } = Collapse;\n\nconst Appfaq = () => {\n    return (\n        <div className=\"block faqBlock\">\n          <div className=\"container-fluid\">\n          <div className=\"titleHolder\">\n              <h2>Preguntas Frecuentes</h2>\n              <p>aqui encontraras la dudas mas usuales</p>\n          </div>\n          <Collapse defaultActiveKey={['1']}>\n            <Panel header=\"Tiene algun costo ser usuario?\" key=\"1\">\n            <p>R//: No tiene ningun costo, es totalmente gratuito</p>\n            </Panel>\n            <Panel header=\"Que es Knowlee?\" key=\"2\">\n            <p>R//: Una Plataforma Comunidad donde aprendes, creas y trabajas las mejores carreras tecnologicas</p>\n            </Panel>\n            <Panel header=\"Que son las Donaciones?\" key=\"3\">\n            <p>R//:Es un ingreso para el mantenimiendo de nuestra plataforma, nuestro equipo para que puedan comer y pagar su alquiler mientras te ayudan a que seas el mejor talento en tu futuro trabajo</p>\n            </Panel>\n            <Panel header=\"Que tecnologias aprendere?\" key=\"4\">\n            <p>R//: Las que tu quieras! y te gusten! tenemos de todo tipo desde backend (codigo en el servidor) como frontend (codigo en el cliente) pasando por muchas otras areas</p>\n            </Panel>\n            <Panel header=\"Cuanto tiempo demoro en aprender?\" key=\"5\">\n            <p>R//: Esta es la mejor pregunta, depende de ti y tus ganas, recuerda la disciplina vence al talento, pero para darte una respuesta sincera en tu primer mes ya podras crear algo!, que te parece? no es super genial? hasta yo mismo me sorprendi</p>\n            </Panel>\n            <Panel header=\"No entiendo muy bien los planes?\" key=\"6\">\n            <p>R//: OK sencillo, el plan basico no incluye ningun servicio solo el uso completo de la plataforma, el plan freelancer incluye vacantes y notificaciones a tu correo y el plan junior incluye todo lo anterior mas mentoria y soporte tecnico</p>\n            </Panel>\n            <Panel header=\"Me gustaria iniciar ya mismo como hago?\" key=\"7\">\n            <p>R//: Escribenos un e-mail y con gusto te contactaremos!, muchas gracias </p>\n            </Panel>\n        </Collapse>\n        <div className=\"quickSupport\">\n            <h2>Necesitas Ayuda?</h2>\n            <p>Envianos un e-mail dale click en el boton de abajo</p>\n            <Button type=\"primary\"><i size=\"large\" class=\"fas fa-envelope\"></i>&nbsp; E-mail tus preguntas</Button>\n        </div>\n          </div>            \n        </div>\n    );\n}\n\nexport default Appfaq;\n","import React from 'react';\nimport { List, Card, Button } from 'antd';\n\nconst data = [\n    {\n      title: 'Basic',\n      content: [\n          {\n              price: \"U$00.00 donation\",\n              mentoring: \"no mentoring\",\n              support: \"no support from the community\",\n              jobs: \"no IT jobs offers\",\n              email: \"no important email notifications\"\n          }\n      ]\n    },\n    {\n        title: 'Freelancer',\n        content: [\n            {\n                price: \"U$30.00 donation\",\n                mentoring: \"no mentoring\",\n                support: \"yes, support from the community\",\n                jobs: \"yes, IT jobs offers\",\n                email: \"yes, important email notifications\"\n            }\n        ]\n      },\n      {\n        title: 'Junior',\n        content: [\n            {\n                price: \"U$50.00 donation\",\n                mentoring: \"yes, mentoring\",\n                support: \"yes, support from the community\",\n                jobs: \"yes, IT jobs offers\",\n                email: \"yes, important email notifications\"\n            }\n        ]\n      }\n  ];\n\nconst AppPricing = () => {\n    return (\n        <div className=\"block pricingBlock bgGray\">\n             <div className=\"container-fluid\">\n             <div className=\"titleHolder\">\n                 <h2>Monthly Donation Plans</h2>\n                 <p>make your learning education path a better live experience</p>\n             </div>\n             <List\n            grid={{ gutter: 16, column: 3 }}\n            dataSource={data}\n            renderItem={item => (\n            <List.Item>\n                <Card title={item.title}>\n                <p className=\"large\">{item.content[0].price}</p>\n                <p>{item.content[0].mentoring}</p>\n                <p>{item.content[0].mentoring}</p>\n                <p>{item.content[0].jobs}</p>\n                <p>{item.content[0].email}</p>\n                <Button type=\"primary\" size=\"large\"><i class=\"fab fa-telegram-plane\"></i>&nbsp; Get started</Button>\n                </Card>\n            </List.Item>\n            )}\n        />\n             </div>\n            \n        </div>\n    );\n}\n\nexport default AppPricing;\n","import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst { TextArea } = Input;\n\nconst AppContact = () => {\n    return (\n        <div className=\"block contactBlock\">\n        <div className=\"container-fluid\">\n            <div className=\"titleHolder\">\n                <h2>Get In Touch</h2>\n                <p>Subtitle of the get in touch goes here thinking what to type my friend calm down i only have 2 two hands</p>\n            </div>\n            <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        >\n        <Form.Item\n            name=\"fullname\"\n            rules={[{ required: true, message: 'Please input your full name!' }]}\n        >\n            <Input placeholder=\"Full Name\" />\n        </Form.Item>\n\n        <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n        >\n            <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            />\n        </Form.Item>\n\n        <Form.Item\n            name=\"subject\"        >\n            <Input placeholder=\"Subject Name\" />\n        </Form.Item>\n\n        <Form.Item\n            name=\"message\"        >\n            <TextArea placeholder=\"Message\" />\n        </Form.Item>\n        \n        <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value ? Promise.resolve() : Promise.reject('Should accept agreement'),\n          },\n        ]}\n      >\n        <Checkbox>\n          I agree with terms and conditions\n        </Checkbox>\n      </Form.Item>\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Submit\n            </Button>\n        </Form.Item>\n        </Form>\n        </div>\n        </div>\n    );\n}\n\nexport default AppContact;\n","/*import React, {useState, useEffect} from 'react';\nimport { getAllPaths } from '../services/paths.js'\nimport { Carousel } from 'antd';\nimport ReactPlayer from 'react-player/youtube'\n\nconst background = \"https://onestopmedia.com.au/wp-content/uploads/2019/10/OSM-dev-top-updated-img.png\"\nconst contentStyle = {\n  height: '400px',\n  color: '#fff',\n  lineHeight: '160px',\n  textAlign: 'center',\n  //background: '#364d79',\n  backgroundImage: \"url(\" + background + \")\"\n};\n\nfunction Home() {\n  const [pathsy, setPaths] = useState(null)\n\n  useEffect(() => {\n      async function getPaths() {\n          const {data} = await getAllPaths()\n          setPaths(data)\n\n      }\n      getPaths()\n      }, [])\n  \n\n  return (\n    <div>\n        <Carousel autoplay>\n                <div>\n                <h3 style={contentStyle} >1</h3>\n                </div>\n                <div>\n                <h3 style={contentStyle}>2</h3>\n                </div>\n                <div>\n                <h3 style={contentStyle}>3</h3>\n                </div>\n                <div>\n                <h3 style={contentStyle}>4</h3>\n                </div>\n        </Carousel>\n        <div style={{ padding: '1rem 3rem'}}>\n        <ReactPlayer url=\"https://www.youtube.com/watch?v=YBYmhWlk8o4\" />\n\n        <h1>Learning paths</h1> \n            {pathsy?.map(path => (\n            <div style={{border:' 1px black solid', margin:'10px'}}>    \n            <h1>{path.title}</h1>\n            {path.topics?.map(({title}) => (\n                <p>{title}</p> ))}\n            </div>          \n            ))}\n            \n        </div>\n    </div>\n  )\n}\n\nexport default Home;*/\n\nimport React, {useState, useEffect} from 'react';\nimport { getAllPaths } from '../services/paths.js'\nimport AppHero from '../components/home/hero';\nimport AppAbout from '../components/home/about';\nimport AppFeature from '../components/home/feature';\nimport Appworks from '../components/home/works';\nimport Appfaq from '../components/home/faq';\nimport AppPricing from '../components/home/pricing';\nimport AppContact from '../components/home/contact';\nfunction Home() {\n  const [pathsy, setPaths] = useState(null)\n  useEffect(() => {\n      async function getPaths() {\n          const {data} = await getAllPaths()\n          setPaths(data)\n      }\n      getPaths()\n      }, [])  \n  return (\n      <div className=\"main\">\n          <AppHero />          \n          <AppAbout />    \n          <AppFeature /> \n          <Appworks />\n          <Appfaq />\n          <AppPricing />\n          <AppContact />\n          <h1>Learning paths</h1> \n            {pathsy?.map(path => (\n            <div style={{border:' 1px black solid', margin:'10px'}}>    \n            <h1>{path.title}</h1>\n            {path.topics?.map(({title}) => (\n                <p>{title}</p> ))}\n            </div>          \n            ))}\n     </div>\n       \n        \n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react'\nimport { Row, Col, Form, Input, Button, Typography, Divider,message } from 'antd'\nimport { loginFn, profile } from '../services/auth'\nimport { useContextInfo } from '../hooks/context'\nimport authLayout from '../components/authLayout'\n\nconst { Title } = Typography\n\nconst googleUrl = process.env.NODE_ENV === 'development' ?\n  \"http://localhost:3000/auth/google\" : '/auth/google'\n\nconst Login = ({ history }) => {\n  const [form] = Form.useForm()\n  const { login } = useContextInfo()\n\n  async function handleSubmit(userInput) {\n    /*const { data } = await loginFn(userInput)\n    login(data);\n    history.push(`/dash/${data._id}`)*/\n\n    try {\n      await loginFn(userInput)\n      const {\n        data: { user }\n      } = await profile()\n      console.log(user)\n      login(user)\n      history.push(`/dash/${user._id}`)\n    } catch (err) {\n      message.error(\"Error with email or password\")\n    }\n  }\n  return (\n    <div style={{background: '#004a6e', width: '100%', height:'800px', paddingTop:'0'}}>\n    <div style={{ padding: '100px 304px'}}>\n    <div style={{padding: '50px', background: 'white', borderRadius: '20px', background: '#F8F8F8'}}> \n    <Row>\n      <Col span={24}>\n        <Title level={1} style={{color:'gray'}}>Login to empower your skills!</Title>\n      </Col>\n      <Divider />\n      <Col span={24}>\n        <Form layout=\"vertical\" form={form} onFinish={handleSubmit}  style={{ borderRadius: '20px'}}>\n          <Form.Item name='username' label=\"Username:\" style={{color:'gray'}}>\n            <Input  style={{ borderRadius: '20px', background:'white'}}/>\n          </Form.Item>\n          <Form.Item name='password' label=\"Password:\" style={{color:'gray'}}>\n            <Input.Password  />\n          </Form.Item>\n          <Button type=\"primary\" block htmlType=\"submit\" style={{color:'white'}}>\n            Login\n          </Button>\n        </Form>\n        <Divider>\n          Or\n        </Divider>\n        <a href={googleUrl}>\n          <Button block>Login with Google</Button>\n        </a>\n      </Col>\n    </Row>\n    </div>\n  </div>\n  </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Layout } from 'antd';\nconst {  Content } = Layout;\n\n\n const authLayout = ({children}) => {\n    return (\n        <div>\n         <Layout className=\"layout\">\n        <Content style={{ padding: '250px' }}>\n      <div style={{ padding: '24px', background: '#fff'}}>{children}</div>\n    </Content>\n    </Layout>\n        </div>\n    )\n}\n\nexport default authLayout","import axios from 'axios'\n\nconst baseURL = '/api/topic'\n\nconst pathService = axios.create({ baseURL })\n\nexport const getAllTopic = () => pathService.get('')\n\nexport const getSingleTopic = id => pathService.get(`/${id}`)\n    \nexport const createTopic =  path => pathService.post(`/create`, path)\n    \nexport const updateTopic = (id, topic) => pathService.put(`/${id}`, topic)\n\nexport const updateContent = (id, topic) => pathService.put(`/${id}`, topic)\n    \n export const deleteTopic = id => pathService.delete(`/${id}`) ","import {\n    AppstoreOutlined,\n    BarChartOutlined,\n    CloudOutlined,\n    ShopOutlined,\n    TeamOutlined,\n    UserOutlined,\n    UploadOutlined,\n    VideoCameraOutlined,\n  } from '@ant-design/icons';\n  import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context'\nimport { logoutFn } from '../services/auth'\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst LayoutDash = ({ children }) => {\n    const { user, logout } = useContextInfo()\n\n    async function handleLogout() {\n      await logoutFn()\n      logout()\n    }\n  \n    return (\n        <div style={{background:'gray'}}>\n         <Layout className=\"layout\">\n        <Header className=\"header\" style={{paddingLeft:'200px'}}>\n        <div />\n        <div className=\"logo\" style={{display:'flex', justifyContent:'right'}}>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">\n              Home\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"8\">\n              <Link to=\"/explore\">\n              Explore\n              </Link>\n          </Menu.Item>\n          {!user ? <>\n            <Menu.Item key=\"2\">\n              <Link to=\"/signup\">\n                Signup\n            </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to=\"/login\">\n                Login\n            </Link>\n            </Menu.Item>\n            <Menu.Item key=\"7\" >\n              <Link to=\"/explore\">\n              Discover\n              </Link>\n            </Menu.Item>\n          </> : <React.Fragment>\n              <Menu.Item key=\"6\">\n              <Link to=\"/choose-donation\">\n              Donate\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"5\" onClick={handleLogout}>\n              <Link to=\"/\">\n              Logout\n              </Link>\n            </Menu.Item>\n\n            \n            </React.Fragment>}\n\n        </Menu>\n        </div>\n      </Header>\n\n    <Content style={{ padding: '0 50px' }}>\n      <Layout className=\"site-layout\">\n      <Sider\n      style={{\n        overflow: 'auto',\n        height: '100vh',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        paddingTop: '50px',\n      }}\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']} \n       style={{shadowBox: '100px'}}>\n        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n        <Link to={`/dash/${user._id}`}>\n           Dashboard\n        </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n        Your topics\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n        Explore paths\n        </Menu.Item>\n        <Menu.Item key=\"4\" icon={<BarChartOutlined />}>\n        <Link to=\"/profile\">\n            Profile\n        </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n    <Content\n          style={{\n            padding: 80,\n            marginLeft: 150,\n            minHeight: 280,\n          }}\n        >\n        <div className=\"site-layout-background\" style={{ padding: 44, textAlign: 'center', width:'1100px', background: '#fff', shadowBox:'-12px -1px 81px -32px', borderRadius:'20px'}}>\n        {children}\n        </div>\n\n        </Content>\n        </Layout>\n    </Content>\n    </Layout>\n    </div>\n    )\n}\n\nexport default LayoutDash\n\n\n  \n\n","import React from 'react'\nimport { createPath } from '../services/paths.js'\nimport { createTopic } from '../services/topics.js'\nimport LayoutDash from \"../components/LayoutDash\";\n\n\n\nimport {\n    Row,\n    Col,\n    Form,\n    Input,\n    Button,\n    Divider,\n    Select,\n    Space\n} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport {useContextInfo} from '../hooks/context'\n\n const CreatePath = (props) => {\n    const [form] = Form.useForm()\n    const {user}= useContextInfo()\n\n    const submitForm=  async (path) =>{ \n        const {data}= await createPath(\n            {\n            title: path.title,\n            description:path.description,\n            category: path.category,\n            userId: user._id\n        }\n        )\n\n        const {_id}= data\n        path.topics? \n        await path.topics.map( topics=>{\n            createTopic(\n            {title:topics.title,\n            objective: topics.objective,\n            duration: topics.duration,\n            content: topics.content,\n            pathId:_id\n            })\n        }): path.topics=' '\n        form.resetFields()\n        props.history.push(`/dash/${path._id}`)\n        } \n\n\n    return (\n        <div>\n         <LayoutDash >\n            <Row>\n        <Col span={24}>\n        <h1>Add new path</h1> \n        <Divider />\n\n        <Form form={form} layout=\"vertical\" onFinish={submitForm} autoComplete=\"off\">\n            <Form.Item\n            name=\"title\"\n            label=\"Title:\"\n            rules={[\n            {\n                required: true,\n                message: 'Please input a title!',\n            },\n            ]}>\n            <Input />\n            </Form.Item>\n\n            <Form.Item \n            name=\"description\"\n            label=\"Description:\"\n            rules={[\n            {\n                required: true,\n                message: 'Please input a description!',\n            }, \n            ]}>\n              <Input.TextArea />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category:\">\n                <Select>\n                <Select.Option value=\"Web Dev\">Web Development</Select.Option>\n                <Select.Option value=\"Ux/Ui\">Ux/Ui</Select.Option>\n                <Select.Option value=\"Dev Ops\">Dev Ops</Select.Option>\n                <Select.Option value=\"Data Science\">Data Science</Select.Option>\n                <Select.Option value=\"Cyber Security\">Cyber Security</Select.Option>\n                </Select>\n            </Form.Item>\n\n            <Form.List name=\"topics\">\n        {(fields, { add, remove }) => (\n            <>\n                {fields.map(field => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                    <Form.Item\n                    {...field}\n                    name={[field.name, 'title']}\n                    fieldKey={[field.fieldKey, 'title']}\n                    rules={[{ required: true, message: 'Missing first name' }]}\n                    >\n                    <Input placeholder=\"Title\" />\n                    </Form.Item>\n\n                    <Form.Item\n                    {...field}\n                    name={[field.name, 'objective']}\n                    fieldKey={[field.fieldKey, 'objective']}\n                    rules={[{ required: true, message: 'Missing last name' }]}\n                    >\n                    <Input.TextArea placeholder=\"Objective\" />\n                    </Form.Item>\n\n                    <Form.Item\n                    {...field}\n                    name={[field.name, 'duration']}\n                    fieldKey={[field.fieldKey, 'duration']}\n                    rules={[{ required: true, message: 'Missing title' }]}\n                    >\n                    <Input placeholder=\"Duration\" />\n                    </Form.Item>\n\n\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n            ))}\n\n                <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                    Add Topic\n                </Button>\n                </Form.Item>\n            </>\n            )}\n        </Form.List>\n\n                <Button type=\"primary\" block htmlType=\"submit\">\n                Create\n                </Button>\n\n            </Form>\n            </Col>\n        </Row>\n        </LayoutDash>\n        </div>\n    )\n}\n\nexport default CreatePath ","import React, {useState, useEffect}from 'react'\nimport { getAllPaths, updatePath} from '../services/paths.js'\nimport { Checkbox, Button, Modal, Form,  Card, Divider, Skeleton} from 'antd'\nimport { Link } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context.js'\nimport { Input } from 'antd';\nimport { createTopic } from '../services/topics.js'\nimport LayoutDash from \"../components/LayoutDash\";\nconst { Search } = Input;\n\nconst Dash = () => {\n    const { user } = useContextInfo()\n    //user´s paths\n    const [pathsy, setPaths] = useState(null)\n    //recommended paths\n    const [otherPaths, setOtherPaths] = useState(null)\n    const [selectedTopics, setSelectedTopics] = useState(null)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [changes, setChanges] = useState(false);\n\n\n    useEffect(() => {\n        async function getPaths() {\n            const {data} = await getAllPaths()\n            //get only users path//\n            const userPaths = data.filter((info)=>\n                info.users[0]===user._id\n            )\n            //get recommended paths--users starts with all existing paths//\n            data.filter((info)=>\n            info.users[0]===user._id\n        )\n            setOtherPaths(data)\n            setPaths(userPaths) \n        }\n        getPaths()\n        }, [changes])\n\n\n\n        //on submit all the selected topics user is adding to paths\n        const onFinish = values => {\n                let copy = {...values}\n                setSelectedTopics(copy)\n        } \n\n        //search recommended paths\n        async function onSearch (value) {\n            let search= value.target.value\n            const {data} = await getAllPaths()\n            let allTitles= data.map(info=> info)\n            let allPaths= allTitles.filter(info=> info.title.toLowerCase()===search)\n            console.log(allPaths, 'titles') \n            setOtherPaths(allPaths)\n          }\n\n         //show modal to transfer topics \n        const showModal = () => {\n            setIsModalVisible(true);\n          };\n\n          //on submit transfer topics to users paths\n        const handleOk = (values) => {\n            setIsModalVisible(false);\n\n            async function getPaths() {\n                //Check every path \n                let allPathsy=[]\n            for(let i=0; i< values['checkbox-group'].length; i++){\n\n                //Id of all selected paths\n                let idPath= values['checkbox-group'][i]._id\n                allPathsy.push(values['checkbox-group'][i])\n\n\n                // all selected topics\n                for(let i=0; i<selectedTopics['checkbox-group'].length; i++  ){             \n                    let {data}=await createTopic({  \n                        title:selectedTopics['checkbox-group'][i].title ,\n                        objective:selectedTopics['checkbox-group'][i].objective ,\n                        duration:selectedTopics['checkbox-group'][i].duration ,\n                        content:selectedTopics['checkbox-group'][i].content , \n                        pathId: allPathsy\n                    })\n                        setChanges(true)\n                        console.log(data.paths, 'path data')\n                        console.log(data, 'newwww')\n                    }\n                }\n               \n            }\n            getPaths()\n\n    }\n        const handleCancel = () => {\n            setIsModalVisible(false);\n        }\n        return (\n            <LayoutDash>\n            <div>\n             {/* User´s paths */} \n             {user? (\n            <div style={{ padding: '1rem 3rem', display:'flex', flexDirection:'row' }}>\n                <div style={{ padding: '1rem 3rem', display:'flex', flexDirection:'column'  }}>\n                <Link to='/path/create'> Create new path</Link>\n                    <div>\n                    <h1>Your paths</h1> \n                    </div>\n                    <div style={{ padding: '1rem', display:'flex', flexDirection:'column'  }}>    \n                        {pathsy?.map(path => (\n                        <div style={{borderRadius:' 20px ', margin:'10px',  width:'350px'}}>\n                        <h2>{path._id}</h2>\n                        <Card hoverable   >\n                            <Link to={`/path/${path._id}`}> <h1>{path.title}</h1> </Link>  \n                            <Divider>Topics</Divider>\n                            {path.topics?.map((topic, index ) => (\n                                <Card hoverable   >\n                                        <p>{topic.title}</p>\n                                        <p>{topic._id}</p>\n                                </Card>        \n                            ))}\n                        </Card>\n                        </div>        \n                        ))}\n                    </div>\n                </div>\n                \n            </div>\n            ):( \n                <Skeleton active />\n            )}\n            \n        </div>\n        </LayoutDash>\n        )\n    }\nexport default Dash","import React, { useState } from 'react'\nimport { Row, Col, Form, Input, Button, Typography, Divider, Upload } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport {PasswordInput} from 'antd-password-input-strength'\nimport { signupFn } from '../services/auth'\nimport axios from 'axios'\n\nconst { Title } = Typography\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/djjro5m0g/image/upload' \n\nconst googleUrl = process.env.NODE_ENV === 'development' ?\n  \"http://localhost:3000/auth/google\" : '/auth/google'\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm()\n  const [img, setImg] = useState(null)\n  const [loading, setLoading] = useState(null)\n\n  async function handleSubmit(userInput) {\n    //await signupFn(userInput)\n    //history.push('/login')\n    //console.log(userInput)\n    const usr = {...userInput, image: img}\n    const {data : newUsr} = await signupFn(usr)\n    console.log(newUsr)\n    history.push('/login')\n  }\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  async function handleUploadFile(file){\n    //console.log(info)\n    setLoading(true)\n    const data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', 'project-final-')\n\n    const {data: {secure_url}} = await axios.post(cloudinaryAPI, data)\n\n    setImg(secure_url)\n    setLoading(false)\n  }\n\n  const uploadButton = (\n      <div>\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n\n  return (\n    <div style={{background: '#004a6e', width: '100%', height:'1200px', paddingTop:'0'}}>\n    <div style={{ padding: '100px 304px'}}>\n    <div style={{padding: '50px', background: 'white', borderRadius: '20px', background: '#F8F8F8'}}> \n    <Row>\n      <Col span={24}>\n        <Title level={1} style={{ padding:'0'}}>Signup</Title>\n      </Col>\n      <Divider />\n      <Col span={24}>\n        <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n          <Form.Item name='username' label=\"Username:\" rules={[{ \n            required: true, message: 'Please input your username!' }]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item name='password' label=\"Password:\" rules={[{ required: true, message: 'Please input your password!' }]} hasFeedback>\n            <PasswordInput />\n          </Form.Item>\n\n          <Form.Item name='email' label=\"Email:\" rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n          ]}>\n            <Input />\n          </Form.Item>\n          \n          <Form.Item name='name' label=\"Name:\" rules={[{ required: true, message: 'Please input your name!' }]}>\n            <Input/>  \n          </Form.Item>\n\n          <Form.Item name='image' label=\"Image:\" rules={[{ required: true, message: 'Please add an image!' }]}>\n            <Upload \n              name=\"image\"\n              showUploadList={false}\n              beforeUpload={handleUploadFile}\n              listType=\"picture-card\"\n            >\n              {img ? <img src={img} style={{width : '100%'}} /> : uploadButton}\n            </Upload>  \n          </Form.Item>\n\n          <Button type=\"primary\" block htmlType=\"submit\">\n            Signup\n          </Button>\n\n          <Button htmlType=\"button\" onClick={onReset}>\n          Reset\n        </Button>\n        </Form>\n        <Divider>\n          Or\n        </Divider>\n        <a href={googleUrl}>\n          <Button block>Sign up with Google</Button>\n        </a>\n      </Col>\n    </Row>\n    </div>\n  </div>\n  </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport {useState} from 'react'\nimport { Form, Input, Button, Upload } from 'antd'\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { updateFn } from '../services/auth'\nimport axios from 'axios'\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/djjro5m0g/image/upload' \n\nfunction UpdateProfileForm({\n    username,\n    name,\n    email,\n    _id, image\n    }) {\n    const [form] = Form.useForm()\n    //const [user, setUser] = useState()\n    const [img, setImg] = useState(null)\n    const [loading, setLoading] = useState(null)\n    const [disable, setDisable] = useState(true)\n\n    async function handleSubmit(values) {\n        const updatedUsr = {...values, image: img}\n        const {data: newUpdatedUsr} = await updateFn(_id, updatedUsr)\n        console.log(newUpdatedUsr)\n    }\n\n    async function handleUploadFile(file){\n        //console.log(info)\n        setLoading(true)\n        const data = new FormData()\n    \n        data.append('file', file)\n        data.append('upload_preset', 'project-final-')\n    \n        const {data: {secure_url}} = await axios.post(cloudinaryAPI, data)\n    \n        setImg(secure_url)\n        setLoading(false)\n    }\n\n    function disabled(){\n        setDisable(!disable)\n    }\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <Form form={form} style={{marginLeft:'150px', width: '350px'}} layout=\"vertical\" onFinish={handleSubmit} initialValues={{\n        username,\n        name,\n        email, image\n        }}>\n        <Form.Item name=\"username\" label=\"Username:\">\n            <Input disabled={disabled} />\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"Email:\">\n            <Input disabled={disabled}/>\n        </Form.Item>\n        <Form.Item name=\"name\" label=\"Name:\">\n            <Input disabled={disabled}/>\n        </Form.Item>\n        <Form.Item name='image' label=\"Image:\" >\n            <Upload \n                name=\"image\"\n                showUploadList={false}\n                beforeUpload={handleUploadFile}\n                listType=\"picture-card\"\n                >\n                {img ? <img src={img} style={{width : '100%'}} /> : uploadButton}\n            </Upload>  \n        </Form.Item>\n        <Button  type=\"primary\" htmlType=\"submit\">\n            Update\n        </Button>\n        </Form>\n    )\n}\n\nexport default UpdateProfileForm","import { useState, useEffect} from 'react'\nimport React from 'react'\nimport { Typography, Row, Col, Button } from 'antd'\nimport { useContextInfo } from '../hooks/context'\nimport { Redirect } from 'react-router-dom'\nimport UpdateProfileForm from '../components/UpdateProfileForm'\nimport { currentUserFn } from '../services/auth'\nimport LayoutDash from \"../components/LayoutDash\";\n\n//traer login y currentuser y hacer useEffect\n\nconst Profile = () => {\n  //const { user } = useContextInfo()\n  const [showEditForm, setShowEditForm] = useState(false)\n  const [user, setUser] = useState(null)\n  const [disable, setDisable] = useState(false)\n\n  const login = user => setUser(user)\n\n\n  const value = {\n    user,\n    login\n  }\n\n  useEffect(() => {\n     async function getSessionData() {\n         const { data } = await currentUserFn()\n         login(data);\n         console.log(user)\n     }\n \n     getSessionData()\n     }, [])\n\n\n\n  return user ? (\n    <div style={{ height:'100%', width:'100%', position:'fixed', padding:'0', margin:'0', top:'0', left:'0' }}>\n    <LayoutDash >\n    <Row>\n      <Col xs={24} sm={24} md={12}>\n      <div style={{display:'flex', flexDirection:'row'}}>\n      <div style={{marginRight:'50px', marginLeft: '30px', width:'100px'}}>\n      <div style={{width: 300, marginTop: '30px'}}>\n        <Typography.Title level={3}>\n          Your account\n        </Typography.Title>\n          {console.log(user.image, user.email)} \n          <br/>\n          <img style={{width: 200, height: 200, borderRadius: 30}} src={user.image} alt=\"User Img\"></img>\n          \n\n          <h4><b>Username:</b>\n            {user.username}\n          <br/>\n          </h4>\n\n          <h4> <b>Email:</b>\n            {user.email}\n          </h4>\n\n          <h4><b>Full name:</b>\n            {user.name}\n          </h4>\n          <br/>\n          </div>\n        </div>\n        <div style={{width:'700px', marginLeft: '170px'}}>\n          { !disable && <UpdateProfileForm {...user} />}\n         </div>\n         </div>\n        <br />\n        <Button\n          type=\"primary\"\n          onClick={() => setShowEditForm(!showEditForm)}\n          block>Edit Profile</Button>\n        <br />\n\n\n      </Col>\n    </Row>\n    </LayoutDash>\n    </div>\n    ) :\n    <Redirect to='/profile' />\n\n}\n\nexport default Profile\n","import React, {useState, useEffect} from 'react'\nimport { updatePath } from '../services/paths'\nimport { useHistory } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context'\nimport { \n    Form,\n    Input,\n    Button,\n    Divider,\n    Select,\n    Skeleton,\n    Card, \n    } from 'antd'\nimport { getSinglePath, deletePath } from '../services/paths.js'\n\nconst EditPath = (props) => {\n    const { user } = useContextInfo()\n    const [form] = Form.useForm()\n    const history = useHistory()\n    const [pathsy, setPaths] = useState(null)\n\n\n    useEffect(() => {\n        async function getPaths() {\n            const {data} = await getSinglePath(props._id)\n            setPaths(data) \n        }\n        getPaths()\n        }, [])\n\n\n    async function handleSubmit(values) {\n        const {data: single} = await getSinglePath(props._id)\n       const {data} =await updatePath(props._id, \n       {\n        title: values.title,\n        description: values.description,\n        category: values.category,\n        topics: single.topics\n       } )\n       history.push(`/path/${props._id}`)\n       setPaths(data)  \n       props.setForms() \n    }\n\n    async function cancelFn(){\n        history.push(`/path/${props._id}`)\n        props.setForms()\n    }\n    return (\n        <div style={{ padding: '1rem 3rem' }}>\n        {pathsy? (<Form form={form} layout=\"vertical\" onFinish={handleSubmit} autoComplete=\"off\" initialValues={{\n        title: pathsy.title,\n        description: pathsy.description,\n        category:pathsy.category,\n        topics:pathsy.topics,\n        }}>\n            <Form.Item\n            name=\"title\"\n            label=\"Title:\"\n            rules={[\n            {\n                required: true,\n                message: 'Please write a title!',\n            },\n            ]}>\n            <Input />\n            </Form.Item>\n\n            <Form.Item \n            name=\"description\"\n            label=\"Description:\"\n            rules={[\n            {\n                required: true,\n                message: 'Please write a description!',\n            }, \n            ]}>\n              <Input.TextArea />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category:\">\n                <Select placeholder=\"Please select a category\">\n                <Select.Option value=\"Web Dev\">Web Development</Select.Option>\n                <Select.Option value=\"Ux/Ui\">Ux/Ui</Select.Option>\n                <Select.Option value=\"Dev Ops\">Dev Ops</Select.Option>\n                <Select.Option value=\"Data Science\">Data Science</Select.Option>\n                <Select.Option value=\"Cyber Security\">Cyber Security</Select.Option>\n                </Select>\n            </Form.Item>\n            <div>\n        <Button type=\"primary\" htmlType=\"submit\">\n            Update\n        </Button>\n        <Button type=\"primary\" onClick={cancelFn}>\n            Cancel\n        </Button>\n        </div>\n        </Form>\n        ):(\n\n            <Skeleton active />\n        )}\n\n\n    </div>\n    )\n}\nexport default EditPath","import React, {useState, useEffect} from 'react'\nimport { getSinglePath, getAllPaths} from '../services/paths.js'\nimport { Typography , Skeleton, Button} from 'antd'\nimport { useContextInfo } from '../hooks/context.js'\n\n\nconst { Title } = Typography\n\nexport const PathInfo = (props) => {\n    const [pathsy, setPaths] = useState(null)\n    const [myPath, setMyPath] = useState(null)\n    const { user } = useContextInfo()\n\n    useEffect(() => {\n        async function getPaths() {\n            const {data} = await getSinglePath(props._id)\n            setPaths(data) \n            const {data: userPath} = await getAllPaths()\n            //id de path en que estamos es igual a la del usuario \n            let a = userPath.filter(id => id.users[0]===user._id)\n\n            console.log(a)\n\n            // agarramos solo las id de paths iguales a las de usuario \n            let userId= a.map(id=>id.users[0])\n   \n            for(let i=0; i<userId.length; i++){\n                console.log(userId[i]===data._id, 'fr')\n            }\n\n            let myPath= userId.filter(id=> id===data._id)\n            // console.log(myPath)\n            // console.log()\n            setMyPath(myPath)\n\n        }\n        getPaths()\n        }, [])\n\n    function changeSett(){\n        props.setForms()\n    }\n\n    \n    return (\n        <div>\n        {pathsy? (<div>\n            <Title level={2}>{pathsy.title}</Title>\n        <div style={{textAlign:'left'}}> \n            <p><b>Description:</b>{pathsy.description}</p>\n            <p> <b>Category:</b>{pathsy.category}</p>\n        </div>\n        \n        {myPath? <Button type=\"ghost\" block onClick={changeSett}  >Edit Project</Button>: <></> }\n        \n        <br />\n        </div>\n        ):(\n            <Skeleton active />\n        )}\n\n        </div>\n    )\n}\n\nexport default PathInfo\n","import React, {useState, useEffect} from 'react'\nimport { useContextInfo } from '../hooks/context'\nimport { getSinglePath, deletePath } from '../services/paths.js'\nimport {  deleteTopic, createTopic} from '../services/topics.js'\nimport { Skeleton, Divider, Card, Button, Modal, Form, Input} from 'antd'\nimport EditPath from '../components/EditPath'\nimport PathInfo from '../components/PathInfo'\nimport { Link } from 'react-router-dom'\nimport LayoutDash from \"../components/LayoutDash\";\n\n\nconst DetailsPath = ({ match: { params: { id } }, history }) => {\n    const [form] = Form.useForm()\n    const [pathsy, setPaths] = useState(null)\n    const [showEditForm, setShowEditForm] = useState(false)\n    const [showInfo, setShowInfo] = useState(true)\n    const [changes, setChanges] = useState(false)\n    const { user } = useContextInfo()\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    useEffect(() => {\n        async function getPaths() {\n             const {data} = await getSinglePath(id)\n             setPaths(data) \n            }\n            getPaths()\n        }, [changes])\n\n        async function handleDelete() {\n            await deletePath(id)\n            history.push(`/dash/${user._id}`)\n        }\n            \n\n        function sum(i) {\n            i++\n        }\n\n        function setForms(){\n            setShowEditForm(!showEditForm)\n            setShowInfo(!showInfo)\n            }\n\n        const showModal = () => {\n            setIsModalVisible(true);\n            }\n\n        const handleCancel = () => {\n            setIsModalVisible(false);\n        }\n\n        const createNewTopic= async (value)=>{\n        const {data: newTopic}= await createTopic(\n                {title:value.title,\n                objective: value.objective,\n                duration: value.duration,\n                content:value.content,\n                pathId:pathsy._id\n                })\n            setIsModalVisible(false);\n            form.resetFields()\n            console.log(newTopic)\n            setChanges(!changes)\n           \n    }\n\n\n    return (\n        <LayoutDash>\n        <div style={{ padding: '1rem 3rem' }}>\n            {pathsy? (<div>\n                {showInfo && <PathInfo {...pathsy} setForms={setForms} /> }\n                <br />\n        {showEditForm && <EditPath {...pathsy} setForms={setForms}/>}\n\n    <Divider>Topics</Divider>\n    <Button type=\"primary\" onClick={showModal} block >Add Topic</Button>\n    <br />\n    \n    {pathsy.topics.map((topic, i) => \n        <Link to={`/topicdetails/${topic._id}`}> \n    <Card hoverable\n     number={sum(i)} title={ (i+1) + '     ' + topic.title  } style={{marginBottom:'10px'}} >\n\n   \n    \n    <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between'}}>  \n \n\n        <div style={{display:'flex', flexDirection:'column', textAlign:'left', marginLeft: '40px', padding: '20px'}}>\n        <p style={{marginBottom:'3px', marginTop:'5px'}} > \n\n        <b>Objective:</b> \n            {topic.objective}</p>\n            <p style={{marginBottom:'3px', paddingLeft:'0px'}} > \n\n        <b>Duration:</b>\n        {topic.duration}</p>\n        </div>\n  \n\n            \n        </div>\n        <div>       \n            <Button type=\"ghost\" onClick={ async ()=> {\n                await deleteTopic(topic._id)\n                setChanges(!changes)}}>Delete</Button> \n            </div>\n    </Card>\n    </Link>\n    )}\n    \n    <Divider></Divider>\n    <Button type=\"ghost\" onClick={handleDelete} danger block >Delete Path</Button>\n    \n    {/* modal to add new topics  */} \n\n        <Modal\n        title=\"Add topic\"\n        visible={isModalVisible}\n        onCancel={handleCancel}\n        okText=\"Add\"\n        cancelText=\"cancel\"\n        >\n            <Form onFinish={createNewTopic} form={form}>\n        <Form.Item name=\"title\" label=\"Title\" rules={[{ required: true, message: 'Missing title' }]}>\n            <Input placeholder=\"Title\" />\n        </Form.Item>\n\n        <Form.Item name=\"objective\" label=\"Objective\" rules={[{ required: true, message: 'Missing objective' }]}>\n            <Input.TextArea placeholder=\"Objective\" />\n        </Form.Item>\n\n        <Form.Item name=\"duration\" label=\"Duration\" rules={[{ required: true, message: 'Missing duration' }]}>\n            <Input placeholder=\"Estimated duration \" />\n        </Form.Item>\n        <Form.Item name=\"content\" hidden/>\n        <Button type=\"ghost\" htmlType='submit' block >Add topic</Button>\n            \n        </Form>\n            </Modal>\n    \n    </div>\n    ) : (\n          <Skeleton active />\n        )}\n    </div>\n    </LayoutDash>\n    )\n}\n\nexport default DetailsPath","import React, {useState} from 'react'\nimport { Skeleton, Button, Form, Input, } from 'antd'\n\n\nexport const TextContent = (props) => {\n    const { TextArea } = Input;\n    const [form] = Form.useForm()\n    const [contenty, setContent] = useState(props)\n\n    return (\n        <div>\n        {contenty?\n            (<div>\n                <Form.Item name='text' rules={[{ required: true, message: 'Please input your knowledge!' }]}>\n                <TextArea  rows={8}  placeholder=\"Write something\" bordered={false} style={{ backgroundColor:'white' }} />\n                </Form.Item>\n            \n           {/* SUBMIT BUTTON */}\n            <div>\n                <Form.Item style={{ marginTop: '10px'}} >\n                <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n                </Button>\n                </Form.Item>\n            </div>\n\n            </div>\n            ):(\n                <Skeleton active />\n            )}\n        </div>\n    )\n}\nexport default TextContent","import React, {useState} from 'react'\nimport {  Skeleton, Button,Form, Input} from 'antd'\nimport ReactPlayer from 'react-player/youtube'\n\n\nexport const LinkContent = (props) => {\n\n    const [contenty, setContent] = useState(props)\n\n    return (\n        <div>\n        {contenty?\n        (<div>\n                    <Form.Item name=\"link\" rules={[{ required: true, message: 'Please write a link' }]}>\n                    <Input placeholder=\"Video link (youtube)\" bordered={false} style={{ backgroundColor:'white' }} value={<ReactPlayer /> } />\n                    </Form.Item>\n\n            {/* SUBMIT BUTTON */}\n\n                <div>\n                    <Form.Item style={{ marginTop: '10px'}}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                    </Form.Item>\n                </div>\n\n            </div>\n            ):(\n                <Skeleton active />\n            )}\n        </div>\n    )\n}\nexport default LinkContent","import React, {useState} from 'react'\nimport { Skeleton, Upload, Button,Form} from 'antd'\nimport axios from 'axios'\nimport { UploadOutlined} from '@ant-design/icons';\n\nconst cloudinaryAPI = 'https://api.cloudinary.com/v1_1/djjro5m0g/image/upload' \n\nexport const ImgContent = (props) => {\n    const [contenty, setContent] = useState(props)\n    const [img, setImg] = useState(null)\n    const [loading, setLoading] = useState(null)\n\n    async function handleUploadFile(file){\n        console.log(file)\n\n        setLoading(true)\n        const data = new FormData()\n    \n        data.append('file', file)\n        data.append('upload_preset', 'project-final-')\n    \n        const {data: {secure_url}} = await axios.post(cloudinaryAPI, data)\n    \n        setImg(secure_url)\n        setLoading(false)\n        };\n    \n    return (\n        <div>\n        {contenty?\n        (<div>\n                    <Form.Item name=\"upload\" valuePropName=\"fileList\" style={{ marginLeft:'30px' }} >\n                        <Upload name=\"image\"  showUploadList={false} listType=\"picture\" beforeUpload={handleUploadFile}>\n                        <Button icon={<UploadOutlined />}> Upload image</Button>\n                        </Upload>\n                    </Form.Item>\n\n                {/* SUBMIT BUTTON */}\n                <div>\n                        <Form.Item style={{ marginTop: '10px'}}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                        </Form.Item>\n                </div>\n\n            </div>\n            ):(\n                <Skeleton active />\n            )}\n        </div>\n    )\n}\nexport default ImgContent","import React, {useState, useEffect} from 'react'\nimport ReactPlayer from 'react-player/youtube'\n\n//ants\nimport { Typography, Skeleton, Divider, Card, Upload, Button, Modal,Form, Input, Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\n//services\nimport {  getSingleTopic, updateTopic} from '../services/topics.js'\n\n//components\nimport TextContent from '../components/TextContent'\nimport LinkContent from '../components/LinkContent'\nimport ImgContent from '../components/ImgContent'\nimport LayoutDash from \"../components/LayoutDash\";\n\n\nexport const ContentTopic = (props) => {\n\n    //GENERAL\n    const [form] = Form.useForm()\n    const [changes, setChanges] = useState(false)\n\n    //TOPICS CONTENT INFO\n    //shows content on screen\n    const [content, setContents] = useState([])\n\n    // paths data\n    const [contenty, setContent] = useState(null)\n\n       //saves content on database\n       const [allInfo, setAllInfo] = useState([])\n\n    //CONTENT, LINKS OR IMG\n    const [txt, setTxt] = useState(null)\n    const [video, setVideo] = useState(null)\n    const [img, setImg] = useState(null)\n\n    //SET FORMS//\n    const [contentForm, setContentForm] = useState(false)\n    const [imgForm, setImgForm] = useState(false)\n    const [linkForm, setLinkForm]=useState(false)\n\n\n    useEffect(() => {\n                async function getInfoTopic() {\n                    const {data} = await getSingleTopic(props.match.params.id)\n                    setContent(data)\n                    setAllInfo(data.content)\n                    setContents(data.content)\n        \n                    let arr=[]\n                    for(let i=0; i<data.content.length; i++){\n                        console.log('2')\n                        if(data.content[i].slice(0, 8)==='https://'){\n                            arr.push(<ReactPlayer url={data.content[i]} />)\n                        }else{\n                            arr.push(data.content[i])\n                        }\n                    }\n                    setContents(arr)\n                 }\n                getInfoTopic()\n                }, [changes])\n        \n                \n            const onFinish =  value => {\n                let contentArray= []\n                let allInfoArray= []\n                async function topicContent () {\n                console.log(value, 'value')\n                    if(value.text){\n                        contentArray=[...content, value.text]\n                        allInfoArray=[...allInfo, value.text]\n\n                    }else{\n                        contentArray=[...content, <ReactPlayer url={value.link} />]\n                        allInfoArray=[...allInfo, value.link]\n                    }\n                    \n                    setContents(contentArray)                    \n                    setAllInfo(allInfoArray)\n  \n\n                    const {data}= await updateTopic(props.match.params.id, {\n                        title: contenty.title,\n                        objective: contenty.objective,\n                        duration: contenty.duration,\n                        content:allInfoArray,\n                        })\n                    setContent(data) \n                }\n        \n               topicContent () \n                setContentForm(false) \n                setLinkForm(false) \n                setImgForm(false) \n                form.resetFields()\n                setChanges (true)\n            };\n        \n        \n            function setContentForms(){\n                setContentForm(!contentForm)\n                }\n        \n            function setLinkForms(){\n                setLinkForm(!linkForm)\n                 }\n            function setImgsForms(){\n                setImgForm(!imgForm)\n            }\n        \n            return (\n                <div style={{display:'flex', flexDirection:'column'}}>\n                    <LayoutDash>\n                {contenty?(\n                    <div style={{width:'80vh'}}> \n                    <Form onFinish={onFinish} form={form}>\n                        <div style={{display:'flex', flexDirection:'row'}}>\n        \n                        {/* BUTTONS */}\n        \n                        <Form.Item name=\"text\" >\n                            <Button  onClick={setContentForms} style={{width:'20vh',height:'5vh'}} type=\"dashed\" icon={<PlusOutlined />}>\n                                Add text\n                            </Button>\n                        </Form.Item>\n        \n                        <Form.Item name=\"text\" >\n                            <Button onClick={setLinkForms}  style={{width:'20vh',height:'5vh'}} type=\"dashed\" icon={<PlusOutlined />}>\n                                Add link\n                            </Button>\n                        </Form.Item>\n\n                     </div>\n        \n                        {/* SHOW FORMS */}\n                        {contentForm && <TextContent {...contenty} /> }\n                        {linkForm && <LinkContent {...video} /> }\n                        {imgForm && <ImgContent {...img} /> }\n                </Form>\n                <h1>{contenty.title}</h1>\n                    <div style={{display:'flex', justifyContent:'left', flexDirection:'column'}}>\n                    <p><b>Objective:</b> {contenty.objective}</p>\n                    <p><b>Duration:</b>  {contenty.duration}</p>\n                </div>\n                    <Divider></Divider>\n                        {content && content }\n        \n                    </div>):(\n                        <Skeleton active />\n                    )}\n        \n                </LayoutDash>\n                </div>\n            )\n        }\n        export default ContentTopic","import React from 'react'\nimport ReactPlayer from 'react-player/youtube'\n\nconst Multimedia = () => {\n\n    let urlY='https://www.youtube.com/watch?v=lWQ69WX7-hA'\n\n    return (<div>\n        <h1>Video</h1>\n    <ReactPlayer url={urlY} />\n    </div>  \n    )}\n\n\nexport default Multimedia;\n\n//     useEffect(() => {\n//         async function getInfoTopic() {\n//             const {data} = await getSingleTopic(props.match.params.id)\n//             setContent(data)\n//             console.log(contenty, 'data')\n\n//             setAllInfo(data.content)\n//             console.log(allInfo, 'all info')\n\n//             let arr=[]\n//             for(let i=0; i<data.content.length; i++){\n//                 if(data.content[i].slice(0, 8)==='https://'){\n//                     arr.push(<ReactPlayer url={data.content[i]} />)\n//                 }else{\n//                     arr.push(data.content[i])\n//                 }\n//             }\n//             setContents(arr)\n//   // console.log(data)\n//          }\n//         getInfoTopic()\n//         }, [changes])\n\n        \n//     const onFinish =  value => {\n//         if(value.text){\n//             console.log('si es texto')\n//              setContents([...content, value.text])\n//              setAllInfo([...allInfo, value.text])\n//             // console.log(allInfo, 'allinfo')\n//         }else{\n//             setContents([...content, <ReactPlayer url={value.link} />])\n//             setAllInfo([...content, value.link])\n//         }\n\n//         async function topicContent () {\n//             const {data}= await updateTopic(props.match.params.id, {\n//                 title: contenty.title,\n//                 objective: contenty.objective,\n//                 duration: contenty.duration,\n//                 content:allInfo,\n//                 })\n//             setContent(data) \n//             console.log(data, 'aaaa')\n//         }\n\n//        topicContent () \n//         setContentForm(false) \n//         setLinkForm(false) \n//         setImgForm(false) \n//         form.resetFields()\n//         setChanges (true)\n//     };\n\n\n//     function setContentForms(){\n//         setContentForm(!contentForm)\n//         }\n\n//     function setLinkForms(){\n//         setLinkForm(!linkForm)\n//          }\n//     function setImgsForms(){\n//         setImgForm(!imgForm)\n//     }\n\n//     return (\n//         <div style={{display:'flex', flexDirection:'column'}}>\n//         {contenty?(\n//             <div style={{width:'80vh'}}> \n//             <Form onFinish={onFinish} form={form}>\n//                 <div style={{display:'flex', flexDirection:'row'}}>\n\n//                 {/* BUTTONS */}\n\n//                 <Form.Item name=\"text\" >\n//                     <Button  onClick={setContentForms} style={{width:'20vh',height:'5vh'}} type=\"dashed\" icon={<PlusOutlined />}>\n//                         Add text\n//                     </Button>\n//                 </Form.Item>\n\n//                 <Form.Item name=\"text\" >\n//                     <Button onClick={setLinkForms}  style={{width:'20vh',height:'5vh'}} type=\"dashed\" icon={<PlusOutlined />}>\n//                         Add link\n//                     </Button>\n//                 </Form.Item>\n\n//                 <Form.Item name=\"text\" >\n//                     <Button onClick={setImgsForms} style={{width:'20vh',height:'5vh'}} type=\"dashed\" icon={<PlusOutlined />}>\n//                         Add img\n//                     </Button>\n//                 </Form.Item>\n//                 {/* <Button onClick={saveChanges}> Save</Button> */}\n//              </div>\n\n//                 {/* SHOW FORMS */}\n//                 {contentForm && <TextContent {...contenty} /> }\n//                 {linkForm && <LinkContent {...video} /> }\n//                 {imgForm && <ImgContent {...img} /> }\n//         </Form>\n//         <h1>{contenty.title}</h1>\n//             <div style={{display:'flex', justifyContent:'left', flexDirection:'column'}}>\n//             <p><b>Objective:</b> {contenty.objective}</p>\n//             <p><b>Duration:</b>  {contenty.duration}</p>\n//         </div>\n//             <Divider></Divider>\n//                 {content && content }\n\n//             </div>):(\n//                 <Skeleton active />\n//             )}\n\n               \n//         </div>\n//     )\n// }\n// export default ContentTopic","import axios from 'axios'\nimport isProd from '../utils/isProd'\n\nconst baseURL = isProd ? '/api/product' : 'http://localhost:3000/api/product'\n\nconst productsService = axios.create({ baseURL })\n\nexport const getProduct100 = () => productsService.get('/100')\nexport const getProduct200 = () => productsService.get('/200')\nexport const getProduct300 = () => productsService.get('/300')\nexport const getProduct400 = () => productsService.get('/400')","import { useState, useEffect, useRef } from 'react';\nimport { getProduct100 } from '../services/products';\nimport React from 'react'\n\n// Quiza se torna un poco mas complejo integrar mercadopago pero les dejo la explicacion linea por linea,\n// En el backend todo igual, el endpoint de detalle de un producto envia la informaci'on del producto pero tambien \n// la informacion del ID de la preferencia de MP\n\n// Es importante que recuerden que MP funciona bien cuando se genera el HTML, pero en este caso tenemos una SPA\n// Y en react es diferente la manipulacion del dom\n\n// Para react la manipulacion del dom se hace con una Referencia, usaremos el hook useRef para que en esa referencia\n// se almacene el elemento del DOM que definimos en la linea 45 (las referencias son un objeto \n// mutable que tienen una propiedad current donde se almacena el valor actual), para que cuando el id de la preferencia llegue,\n// Generamos mediante manipulacion del dom el script necesario con los atributos que pide MP y le hacemos append a \n// ese elemento del dom el script como hijo\n\nfunction Donate100() {\n  const [product, setProduct] = useState(null)\n  // Creamos la referencia sin un parametro en el hook use Ref, inicialmente no tiene valor, \n  // Una vez que se asigna a un elemento de jsx como prop ref ese elemento se almacena \n  // en la propiedad current de la referencia vease el console log de la linea: \n  const paymentContainereRef = useRef()\n\n  // Agregamos un efecto no solo para obtener la informacion del producto pero tambien para \n  // Agregar como hijo al elemento de nuestra referencia un script generado con la API del DOM (document.createElement)\n  useEffect(() => {\n\n    async function fetchProduct(){\n    const { data: product } = await getProduct100()\n    console.log(product.unit_price)\n    //product.unit_price = 300\n    product.currency_id = 'MXN'\n    //console.log(product.unit_price)\n\n    // Generamos el script que nos pide mercado pago pero a mano con createElement\n    const script = document.createElement(\"script\");\n\n    // Agregamos los atributos que el script requiere\n    script.src = \"https://www.mercadopago.com.mx/integrations/v1/web-payment-checkout.js\";\n    script.setAttribute('data-preference-id', product.prefId)\n    // hacemos appendChild de nuestro script recien generado a nuestro elemento con la referencia\n    paymentContainereRef.current.appendChild(script);\n\n    setProduct(product);\n    }\n    fetchProduct()\n    \n  }, [])\n\n  return (\n    <div>\n      <h1>Donate</h1>\n      <p>{product?.unit_price}</p>\n      {/*<pre>{JSON.stringify(product, null, 2)}</pre>*/}\n      {/* asignamos la referencia al elemento que queremos que contenga el boton de mercadopago (que lo trae nuestro script) */}\n      <div ref={paymentContainereRef}></div>\n    </div>\n  );\n}\n\nexport default Donate100;","import { useState, useEffect, useRef } from 'react';\nimport { getProduct200 } from '../services/products';\nimport React from 'react'\n\n// Quiza se torna un poco mas complejo integrar mercadopago pero les dejo la explicacion linea por linea,\n// En el backend todo igual, el endpoint de detalle de un producto envia la informaci'on del producto pero tambien \n// la informacion del ID de la preferencia de MP\n\n// Es importante que recuerden que MP funciona bien cuando se genera el HTML, pero en este caso tenemos una SPA\n// Y en react es diferente la manipulacion del dom\n\n// Para react la manipulacion del dom se hace con una Referencia, usaremos el hook useRef para que en esa referencia\n// se almacene el elemento del DOM que definimos en la linea 45 (las referencias son un objeto \n// mutable que tienen una propiedad current donde se almacena el valor actual), para que cuando el id de la preferencia llegue,\n// Generamos mediante manipulacion del dom el script necesario con los atributos que pide MP y le hacemos append a \n// ese elemento del dom el script como hijo\n\nfunction Donate200() {\n  const [product, setProduct] = useState(null)\n  // Creamos la referencia sin un parametro en el hook use Ref, inicialmente no tiene valor, \n  // Una vez que se asigna a un elemento de jsx como prop ref ese elemento se almacena \n  // en la propiedad current de la referencia vease el console log de la linea: \n  const paymentContainereRef = useRef()\n\n  // Agregamos un efecto no solo para obtener la informacion del producto pero tambien para \n  // Agregar como hijo al elemento de nuestra referencia un script generado con la API del DOM (document.createElement)\n  useEffect(() => {\n\n    async function fetchProduct(){\n    const { data: product } = await getProduct200()\n    console.log(product.unit_price)\n    //product.unit_price = 300\n    product.currency_id = 'MXN'\n    //console.log(product.unit_price)\n\n    // Generamos el script que nos pide mercado pago pero a mano con createElement\n    const script = document.createElement(\"script\");\n\n    // Agregamos los atributos que el script requiere\n    script.src = \"https://www.mercadopago.com.mx/integrations/v1/web-payment-checkout.js\";\n    script.setAttribute('data-preference-id', product.prefId)\n    // hacemos appendChild de nuestro script recien generado a nuestro elemento con la referencia\n    paymentContainereRef.current.appendChild(script);\n\n    setProduct(product);\n    }\n    fetchProduct()\n    \n  }, [])\n\n  return (\n    <div>\n      <h1>Donate</h1>\n      <p>{product?.unit_price}</p>\n      {/*<pre>{JSON.stringify(product, null, 2)}</pre>*/}\n      {/* asignamos la referencia al elemento que queremos que contenga el boton de mercadopago (que lo trae nuestro script) */}\n      <div ref={paymentContainereRef}></div>\n    </div>\n  );\n}\n\nexport default Donate200;","import { useState, useEffect, useRef } from 'react';\nimport { getProduct300 } from '../services/products';\nimport React from 'react'\n\n// Quiza se torna un poco mas complejo integrar mercadopago pero les dejo la explicacion linea por linea,\n// En el backend todo igual, el endpoint de detalle de un producto envia la informaci'on del producto pero tambien \n// la informacion del ID de la preferencia de MP\n\n// Es importante que recuerden que MP funciona bien cuando se genera el HTML, pero en este caso tenemos una SPA\n// Y en react es diferente la manipulacion del dom\n\n// Para react la manipulacion del dom se hace con una Referencia, usaremos el hook useRef para que en esa referencia\n// se almacene el elemento del DOM que definimos en la linea 45 (las referencias son un objeto \n// mutable que tienen una propiedad current donde se almacena el valor actual), para que cuando el id de la preferencia llegue,\n// Generamos mediante manipulacion del dom el script necesario con los atributos que pide MP y le hacemos append a \n// ese elemento del dom el script como hijo\n\nfunction Donate300() {\n  const [product, setProduct] = useState(null)\n  // Creamos la referencia sin un parametro en el hook use Ref, inicialmente no tiene valor, \n  // Una vez que se asigna a un elemento de jsx como prop ref ese elemento se almacena \n  // en la propiedad current de la referencia vease el console log de la linea: \n  const paymentContainereRef = useRef()\n\n  // Agregamos un efecto no solo para obtener la informacion del producto pero tambien para \n  // Agregar como hijo al elemento de nuestra referencia un script generado con la API del DOM (document.createElement)\n  useEffect(() => {\n\n    async function fetchProduct(){\n    const { data: product } = await getProduct300()\n    console.log(product.unit_price)\n    //product.unit_price = 300\n    product.currency_id = 'MXN'\n    //console.log(product.unit_price)\n\n    // Generamos el script que nos pide mercado pago pero a mano con createElement\n    const script = document.createElement(\"script\");\n\n    // Agregamos los atributos que el script requiere\n    script.src = \"https://www.mercadopago.com.mx/integrations/v1/web-payment-checkout.js\";\n    script.setAttribute('data-preference-id', product.prefId)\n    // hacemos appendChild de nuestro script recien generado a nuestro elemento con la referencia\n    paymentContainereRef.current.appendChild(script);\n\n    setProduct(product);\n    }\n    fetchProduct()\n    \n  }, [])\n\n  return (\n    <div>\n      <h1>Donate</h1>\n      <p>{product?.unit_price}</p>\n      {/*<pre>{JSON.stringify(product, null, 2)}</pre>*/}\n      {/* asignamos la referencia al elemento que queremos que contenga el boton de mercadopago (que lo trae nuestro script) */}\n      <div ref={paymentContainereRef}></div>\n    </div>\n  );\n}\n\nexport default Donate300;","import { useState, useEffect, useRef } from 'react';\nimport { getProduct400 } from '../services/products';\nimport React from 'react'\n\n// Quiza se torna un poco mas complejo integrar mercadopago pero les dejo la explicacion linea por linea,\n// En el backend todo igual, el endpoint de detalle de un producto envia la informaci'on del producto pero tambien \n// la informacion del ID de la preferencia de MP\n\n// Es importante que recuerden que MP funciona bien cuando se genera el HTML, pero en este caso tenemos una SPA\n// Y en react es diferente la manipulacion del dom\n\n// Para react la manipulacion del dom se hace con una Referencia, usaremos el hook useRef para que en esa referencia\n// se almacene el elemento del DOM que definimos en la linea 45 (las referencias son un objeto \n// mutable que tienen una propiedad current donde se almacena el valor actual), para que cuando el id de la preferencia llegue,\n// Generamos mediante manipulacion del dom el script necesario con los atributos que pide MP y le hacemos append a \n// ese elemento del dom el script como hijo\n\nfunction Donate400() {\n  const [product, setProduct] = useState(null)\n  // Creamos la referencia sin un parametro en el hook use Ref, inicialmente no tiene valor, \n  // Una vez que se asigna a un elemento de jsx como prop ref ese elemento se almacena \n  // en la propiedad current de la referencia vease el console log de la linea: \n  const paymentContainereRef = useRef()\n\n  // Agregamos un efecto no solo para obtener la informacion del producto pero tambien para \n  // Agregar como hijo al elemento de nuestra referencia un script generado con la API del DOM (document.createElement)\n  useEffect(() => {\n\n    async function fetchProduct(){\n    const { data: product } = await getProduct400()\n    console.log(product.unit_price)\n    //product.unit_price = 300\n    product.currency_id = 'MXN'\n    //console.log(product.unit_price)\n\n    // Generamos el script que nos pide mercado pago pero a mano con createElement\n    const script = document.createElement(\"script\");\n\n    // Agregamos los atributos que el script requiere\n    script.src = \"https://www.mercadopago.com.mx/integrations/v1/web-payment-checkout.js\";\n    script.setAttribute('data-preference-id', product.prefId)\n    // hacemos appendChild de nuestro script recien generado a nuestro elemento con la referencia\n    paymentContainereRef.current.appendChild(script);\n\n    setProduct(product);\n    }\n    fetchProduct()\n    \n  }, [])\n\n  return (\n    <div>\n      <h1>Donate</h1>\n      <p>{product?.unit_price}</p>\n      {/*<pre>{JSON.stringify(product, null, 2)}</pre>*/}\n      {/* asignamos la referencia al elemento que queremos que contenga el boton de mercadopago (que lo trae nuestro script) */}\n      <div ref={paymentContainereRef}></div>\n    </div>\n  );\n}\n\nexport default Donate400;","import React from 'react'\nimport {useState} from 'react'\nimport { Steps, Divider } from 'antd';\n\nconst { Step } = Steps;\n\nconst Progreso = () => {\n    const[current, setcurrent] = ('Finished')\n\nreturn <>\n<Steps direction=\"vertical\" size=\"small\" current={2}>\n    <Step title=\"Finished\" description=\"This is a description.\" />\n    <Step title=\"In Progress\" description=\"This is a description.\" />\n    <Step title=\"Waiting\" description=\"This is a description.\" />\n  </Steps>,\n</>\n}\nexport default Progreso\n","import React from 'react'\nimport {InputNumber, Button} from 'antd'\nimport {\n Link\n} from 'react-router-dom'\nimport LayoutDash from \"../components/LayoutDash\";\n\nconst PreDonate = () => {\n\nfunction onPressEnter(value) {\n  console.log('changed', value);\n}\n\nreturn (<div>\n    <LayoutDash>\n    Please choose the amount<br/>\n    <Button type=\"link\" href=\"/donate100\">100</Button>\n    <Button type=\"link\" href=\"/donate200\">200</Button>\n    <Button type=\"link\" href=\"/donate300\">300</Button>\n    <Button type=\"link\" href=\"/donate400\">400</Button>\n    <br/>\n    $\n    {/*<InputNumber>\n        defaultValue={1000}\n        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n        onPressEnter={onPressEnter}\n    </InputNumber> MXN*/}\n    </LayoutDash>\n</div>\n      \n    \n) \n}\n\nexport default PreDonate\n\n","import { Route, Redirect } from \"react-router-dom\"\nimport { useContextInfo } from '../hooks/context.js'\nimport React from 'react'\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user } = useContextInfo()\n  return (\n    <Route\n      {...rest}\n      render={props => (user ? <Component {...props} /> : <Redirect to='/' />)}\n    />\n  )\n}\n\nexport default PrivateRoute","import { Route, Redirect } from \"react-router-dom\"\nimport { useContextInfo } from \"../hooks/context\"\nimport React from 'react'\n\n\nconst PrivDash = ({ component: Component, ...rest }) => {\n  const { user } = useContextInfo()\n  return (\n    <Route\n      {...rest}\n      render={props => (!user ? <Component {...props} /> : <Redirect to={`/dash/${user._id}`} />)}\n    />\n  )\n}\n\nexport default PrivDash","import React, {useState, useEffect}from 'react'\nimport { getAllPaths, updatePath} from '../services/paths.js'\nimport { Checkbox, Button, Modal, Form,  Card, Divider, Skeleton} from 'antd'\nimport { Link } from 'react-router-dom'\nimport { useContextInfo } from '../hooks/context.js'\nimport { Input } from 'antd';\nimport { createTopic } from '../services/topics.js'\nimport LayoutDash from \"../components/LayoutDash\";\nconst { Search } = Input;\n\nconst ExplorePaths = () => {\n    const { user } = useContextInfo()\n    //user´s paths\n    const [pathsy, setPaths] = useState(null)\n    //recommended paths\n    const [otherPaths, setOtherPaths] = useState(null)\n    const [selectedTopics, setSelectedTopics] = useState(null)\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [changes, setChanges] = useState(false);\n\n\n    useEffect(() => {\n        async function getPaths() {\n            const {data} = await getAllPaths()\n            //get only users path//\n            const userPaths = data.filter((info)=>\n                info.users[0]===user._id\n            )\n            //get recommended paths--users starts with all existing paths//\n            data.filter((info)=>\n            info.users[0]===user._id\n        )\n            setOtherPaths(data)\n            setPaths(userPaths) \n        }\n        getPaths()\n        }, [changes])\n\n\n\n        //on submit all the selected topics user is adding to paths\n        const onFinish = values => {\n                let copy = {...values}\n                setSelectedTopics(copy)\n        } \n\n        //search recommended paths\n        async function onSearch (value) {\n            let search= value.target.value\n            const {data} = await getAllPaths()\n            let allTitles= data.map(info=> info)\n            let allPaths= allTitles.filter(info=> info.title.toLowerCase()===search)\n            console.log(allPaths, 'titles') \n            setOtherPaths(allPaths)\n          }\n\n         //show modal to transfer topics \n        const showModal = () => {\n            setIsModalVisible(true);\n          };\n\n          //on submit transfer topics to users paths\n        const handleOk = (values) => {\n            setIsModalVisible(false);\n\n            async function getPaths() {\n                //Check every path \n                let allPathsy=[]\n            for(let i=0; i< values['checkbox-group'].length; i++){\n\n                //Id of all selected paths\n                let idPath= values['checkbox-group'][i]._id\n                allPathsy.push(values['checkbox-group'][i])\n\n\n                // all selected topics\n                for(let i=0; i<selectedTopics['checkbox-group'].length; i++  ){             \n                    let {data}=await createTopic({  \n                        title:selectedTopics['checkbox-group'][i].title ,\n                        objective:selectedTopics['checkbox-group'][i].objective ,\n                        duration:selectedTopics['checkbox-group'][i].duration ,\n                        content:selectedTopics['checkbox-group'][i].content , \n                        pathId: allPathsy\n                    })\n                        setChanges(true)\n                        console.log(data.paths, 'path data')\n                        console.log(data, 'newwww')\n                    }\n                }\n               \n            }\n            getPaths()\n\n    }\n        const handleCancel = () => {\n            setIsModalVisible(false);\n        }\n        return (\n            <LayoutDash>\n                <div>\n                \n                    {/* Other paths section */} \n                    <div style={{ padding: '1rem 3rem'}}>\n                    {/* searchbar */}\n                    <Search placeholder=\"input search text\" onChange={onSearch} allowClear style={{ width: 500 }} />                        <br />         \n                        <h1>Other paths</h1>\n                        {/* shoose any topic to add to own paths */} \n                        <div > \n                        <Form  onFinish={onFinish}>\n                        <Button type=\"primary\"  onClick={showModal} htmlType=\"submit\" > Add to my paths  </Button> \n                        <Form.Item name=\"checkbox-group\">\n                            {/* show only paths that interest user*/} \n                            <Checkbox.Group > \n                                {otherPaths?.map(path => (\n                                    <div style={{ padding: '1rem', display:'flex', flexDirection:'column'  }} >\n                                    <Card hoverable >\n                                    <Link to={`/path/explore/${path._id}`}> <h1>{path.title}</h1> </Link> \n                                    <h1>{path._id}</h1>\n                                    <Divider>Topics</Divider>\n                                    <div style={{ padding: '1rem', display:'flex', flexDirection:'column', width:'350px' }} >\n                                            {path.topics?.map((topic, index) => (\n                                                <Card hoverable   >\n                                                    <Checkbox value={topic}>\n                                                    <Link to={`/topicdetails/${topic._id}`}>\n                                                    <p>{topic.title}</p>\n                                                    <p>{topic._id}</p>\n\n                                                    </Link>\n                                                    </Checkbox>\n                                                </Card> \n                                            ))}\n                                    </div>\n                                    </Card>    \n                                    </div>   \n                                    ))}\n                            </Checkbox.Group>\n                                    </Form.Item>\n                            </Form>\n                            {/* modal to select the path to add new topics to */} \n                            <Modal\n                                title=\"Basic Modal\"\n                                visible={isModalVisible}\n                                onCancel={handleCancel}\n                                okText=\"Add\"\n                                cancelText=\"cancel\"\n                            >\n                        <div > \n                        <Form  onFinish={handleOk}>\n                            <Form.Item name=\"checkbox-group\">\n                            <Checkbox.Group > \n                                {pathsy?.map(path => (\n                                <div>\n                                    <Checkbox  value={path}>\n                                        <h3>{path.title}</h3> \n                                    </Checkbox>\n                                </div>        \n                                ))}\n                            </Checkbox.Group>\n                            </Form.Item>\n                            <Button type=\"primary\"  htmlType=\"submit\" > Add to my paths  </Button> \n                            </Form>\n                            </div>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                ):( \n                    <Skeleton active />\n                )}\n                \n           \n        </LayoutDash>\n        )\n    }\nexport default ExplorePaths","import React, {useState, useEffect} from 'react'\nimport { useContextInfo } from '../hooks/context'\nimport { getSinglePath, deletePath } from '../services/paths.js'\nimport {  deleteTopic, createTopic} from '../services/topics.js'\nimport { Input, Typography, Skeleton, Divider, Card, Button, Modal, Form, Inputtle} from 'antd'\nimport { Link } from 'react-router-dom'\nimport LayoutDash from \"../components/LayoutDash\";\nconst { Title } = Typography\nconst DetailsExplorePath = ({ match: { params: { id } }, history }) => {\n    console.log(id)\n    const [form] = Form.useForm()\n    const [pathsy, setPaths] = useState(null)\n    const [showEditForm, setShowEditForm] = useState(false)\n    const [showInfo, setShowInfo] = useState(true)\n    const [changes, setChanges] = useState(false)\n    const { user } = useContextInfo()\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    useEffect(() => {\n    async function getPaths() {\n        const {data} = await getSinglePath(id)\n        setPaths(data) \n    }\n    getPaths()\n    }, [changes])\n function sum(i) {\n    i++\n }\nconst showModal = () => {\n    setIsModalVisible(true);\n    }\nconst handleCancel = () => {\n    setIsModalVisible(false);\n}\nconst createNewTopic= async (value)=>{\n    const {data: newTopic}= await createTopic(\n        {title:value.title,\n        objective: value.objective,\n        duration: value.duration,\n        content:value.content,\n        pathId:pathsy._id\n        })\n        setIsModalVisible(false);\n        form.resetFields()\n        console.log(newTopic)\n        setChanges(!changes)\n} \n    return (\n    <LayoutDash>\n        <div style={{ padding: '1rem 3rem' }}>\n        {pathsy? (<div>\n            <Title level={2}>{pathsy.title}</Title>\n        <div style={{textAlign:'left'}}> \n            <p><b>Description:</b>{pathsy.description}</p>\n            <p> <b>Category:</b>{pathsy.category}</p>\n        </div>\n    <Divider>Topics</Divider>\n    <br />\n    {pathsy.topics.map((topic, i) => \n        <Link to={`/topicdetails/${topic._id}`}> \n    <Card hoverable\n     number={sum(i)} title={ (i+1) + '     ' + topic.title  } style={{marginBottom:'10px'}} >\n    <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between'}}>  \n        <div style={{display:'flex', flexDirection:'column', textAlign:'left', marginLeft: '40px', padding: '20px'}}>\n        <p style={{marginBottom:'3px', marginTop:'5px'}} > \n        <b>Objective:</b> \n            {topic.objective}</p>\n            <p style={{marginBottom:'3px', paddingLeft:'0px'}} > \n        <b>Duration:</b>\n        {topic.duration}</p>\n            </div>\n        </div>\n    </Card>\n    </Link>\n    )}\n    <Divider></Divider>\n    {/* modal to add new topics  */} \n        <Modal\n        title=\"Add topic\"\n        visible={isModalVisible}\n        onCancel={handleCancel}\n        okText=\"Add\"\n        cancelText=\"cancel\"\n        >\n            <Form onFinish={createNewTopic} form={form}>\n        <Form.Item name=\"title\" label=\"Title\" rules={[{ required: true, message: 'Missing title' }]}>\n            <Input placeholder=\"Title\" />\n        </Form.Item>\n        <Form.Item name=\"objective\" label=\"Objective\" rules={[{ required: true, message: 'Missing objective' }]}>\n            <Input.TextArea placeholder=\"Objective\" />\n        </Form.Item>\n        <Form.Item name=\"duration\" label=\"Duration\" rules={[{ required: true, message: 'Missing duration' }]}>\n            <Input placeholder=\"Estimated duration \" />\n        </Form.Item>\n        <Form.Item name=\"content\" hidden/>\n        <Button type=\"ghost\" htmlType='submit' block >Add topic</Button>\n        </Form>\n            </Modal>\n    </div>\n    ) : (\n          <Skeleton active />\n        )}\n    </div>\n    </LayoutDash> \n    )\n}\nexport default DetailsExplorePath;","import React, {useState, useEffect} from 'react'\nimport ReactPlayer from 'react-player/youtube'\n\n//ants\nimport { Typography, Skeleton, Divider, Card, Upload, Button, Modal,Form, Input, Space} from 'antd'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\n//services\nimport {  getSingleTopic, updateTopic} from '../services/topics.js'\n\n//components\nimport TextContent from '../components/TextContent'\nimport LinkContent from '../components/LinkContent'\nimport ImgContent from '../components/ImgContent'\nimport LayoutDash from \"../components/LayoutDash\";\n\n\nexport const DetailsTopic = (props) => {\n\n    //GENERAL\n    const [form] = Form.useForm()\n    const [changes, setChanges] = useState(false)\n\n    //TOPICS CONTENT INFO\n    //shows content on screen\n    const [content, setContents] = useState([])\n\n    // paths data\n    const [contenty, setContent] = useState(null)\n\n       //saves content on database\n       const [allInfo, setAllInfo] = useState([])\n\n    //CONTENT, LINKS OR IMG\n    const [txt, setTxt] = useState(null)\n    const [video, setVideo] = useState(null)\n    const [img, setImg] = useState(null)\n\n    //SET FORMS//\n    const [contentForm, setContentForm] = useState(false)\n    const [imgForm, setImgForm] = useState(false)\n    const [linkForm, setLinkForm]=useState(false)\n\n\n    useEffect(() => {\n                async function getInfoTopic() {\n                    const {data} = await getSingleTopic(props.match.params.id)\n                    setContent(data)\n                    setAllInfo(data.content)\n                    setContents(data.content)\n        \n                    let arr=[]\n                    for(let i=0; i<data.content.length; i++){\n                        console.log('2')\n                        if(data.content[i].slice(0, 8)==='https://'){\n                            arr.push(<ReactPlayer url={data.content[i]} />)\n                        }else{\n                            arr.push(data.content[i])\n                        }\n                    }\n                    setContents(arr)\n                 }\n                getInfoTopic()\n                }, [changes])\n        \n                \n            const onFinish =  value => {\n                let contentArray= []\n                let allInfoArray= []\n                async function topicContent () {\n                console.log(value, 'value')\n                    if(value.text){\n                        contentArray=[...content, value.text]\n                        allInfoArray=[...allInfo, value.text]\n\n                    }else{\n                        contentArray=[...content, <ReactPlayer url={value.link} />]\n                        allInfoArray=[...allInfo, value.link]\n                    }\n                    \n                    setContents(contentArray)                    \n                    setAllInfo(allInfoArray)\n  \n\n                    const {data}= await updateTopic(props.match.params.id, {\n                        title: contenty.title,\n                        objective: contenty.objective,\n                        duration: contenty.duration,\n                        content:allInfoArray,\n                        })\n                    setContent(data) \n                }\n        \n               topicContent () \n                setContentForm(false) \n                setLinkForm(false) \n                setImgForm(false) \n                form.resetFields()\n                setChanges (true)\n            };\n        \n        \n            function setContentForms(){\n                setContentForm(!contentForm)\n                }\n        \n            function setLinkForms(){\n                setLinkForm(!linkForm)\n                 }\n            function setImgsForms(){\n                setImgForm(!imgForm)\n            }\n        \n            return (\n                <div style={{display:'flex', flexDirection:'column'}}>\n                    <LayoutDash>\n                {contenty?(\n                    <div style={{width:'80vh'}}> \n\n                <h1>{contenty.title}</h1>\n                    <div style={{display:'flex', justifyContent:'left', flexDirection:'column'}}>\n                    <p><b>Objective:</b> {contenty.objective}</p>\n                    <p><b>Duration:</b>  {contenty.duration}</p>\n                </div>\n                    <Divider></Divider>\n                        {content && content }\n        \n                    </div>):(\n                        <Skeleton active />\n                    )}\n        \n                </LayoutDash>\n                </div>\n            )\n        }\n        export default DetailsTopic","import React from 'react'\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport LayoutApp from \"./components/LayoutApp\";\nimport Home from './components/Home';\nimport NotFound from './components/404/NotFound.js';\nimport Login from './pages/Login'\nimport CreatePath from './pages/CreatePath'\nimport Dash from './pages/Dash'\nimport Signup from './pages/Signup'\nimport Profile from './pages/Profile'\nimport DetailsPath from './pages/DetailsPath'\nimport ContentTopic from './pages/ContentTopic'\nimport Multimedia from './pages/Multimedia'\nimport Donate100 from './pages/Donate100'\nimport Donate200 from './pages/Donate200'\nimport Donate300 from './pages/Donate300'\nimport Donate400 from './pages/Donate400'\nimport Progreso from \"./pages/Progreso\"\nimport ChooseDonation from './pages/ChooseDonation'\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport PrivDash from \"./components/PrivDash\"\nimport ExplorePaths from \"./pages/ExplorePaths\"\nimport DetailsExplorePath from \"./pages/DetailsExplorePath\"\nimport DetailsTopic from \"./pages/DetailsTopic\"\n\n///Dummy Components\n//const Home = () => <h1>Home</h1>\n// const Login = () => <h1>Login</h1>\n// const Signup = () => <h1>Signup</h1>\n// const Profile = () => <h1>Profile</h1>\n\nconst Success = () => <h1>Success Payment</h1>\nconst Failure = () => <h1>Failure Payment</h1>\nconst Pending = () => <h1>Pending Payment</h1>\n\nconst Router = () => {\n  return (\n    <BrowserRouter >\n      \n      <Route exact path=\"/\" component={Home} />\n      <PrivateRoute exact path=\"/dash/:id\" component={Dash} />\n      <PrivateRoute path='/path/create' component={CreatePath} exact />\n      <PrivateRoute path='/path/:id' component={DetailsPath} exact />\n      <Route path='/explore' component={ExplorePaths} exact />\n      <Route path='/path/explore/:id' component={DetailsExplorePath} exact />      \n      <PrivateRoute path='/topic/:id' component={ContentTopic} exact />\n      <PrivateRoute path='/topicdetails/:id' component={DetailsTopic} exact />\n      <PrivDash path='/login' component={Login} exact/>\n      <Route path='/signup' component={Signup} exact/>\n      <PrivateRoute path='/profile' component={Profile} exact />\n      <Route path='/multimedia' component={Multimedia} exact />\n      <Route path='/choose-donation' component={ChooseDonation}exact />\n      <Route path='/donate100' component={Donate100} exact />\n      <Route path='/donate200' component={Donate200} exact />\n      <Route path='/donate300' component={Donate300} exact />\n      <Route path='/donate400' component={Donate400} exact />\n      <Route path='/progreso' component={Progreso} exact />\n      <Route exact path=\"/success\" component={Success} />\n      <Route exact path=\"/failure\" component={Failure} />\n      <Route exact path=\"/pending\" component={Pending} />\n      \n    {/*<Route component={NotFound} />*/}\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport { CtxProvider } from \"./hooks/context\"\nimport 'antd/dist/antd.css';\n//<script src=\"https://kit.fontawesome.com/15181efa86.js\" crossorigin=\"anonymous\"></script> \n\nReactDOM.render(\n    // <React.StrictMode>\n    <CtxProvider>\n    <Router />\n    </CtxProvider>\n    // </React.StrictMode>,\n    ,document.getElementById('root')\n    );\n\nserviceWorker.unregister();\n"],"sourceRoot":""}